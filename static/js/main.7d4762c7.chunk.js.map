{"version":3,"sources":["components/User/AddOrEdit.js","components/User/Confirmation.js","components/User/List.js","hooks/useCRUD.js","components/User/index.js","components/Group.js/AddOrEdit.js","components/Group.js/Confirmation.js","components/Group.js/List.js","components/Group.js/index.js","App.js","serviceWorker.js","index.js"],"names":["AddOrEdit","onAddUser","onUpdateUser","editedUser","initialUser","useState","user","setUser","useEffect","clearForm","Container","Form","Control","type","value","id","readOnly","Group","as","Row","controlId","Label","column","sm","Col","placeholder","email","onChange","e","target","username","pass","span","offset","Button","onClick","Math","floor","random","variant","Confirmation","show","handleClose","onYes","Modal","onHide","Header","closeButton","Title","Body","Footer","List","users","onEditUser","onDeleteUser","showModal","setShowModal","wantToDeleteUserId","setWantToDeleteUserId","handleShowModal","isShow","Table","striped","bordered","hover","map","i","key","ButtonToolbar","size","useCRUD","initialDatas","initialData","datas","setDatas","data","setData","updatedData","filter","User","onAdd","onUpdate","group","setGroup","name","description","onEdit","onDelete","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7d4762c7.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Form, Col, Row, Button, Container } from \"react-bootstrap\";\n\nfunction AddOrEdit({ onAddUser, onUpdateUser, editedUser, initialUser }) {\n  const [user, setUser] = useState(editedUser);\n\n  useEffect(() => {\n    setUser(editedUser);\n  }, [editedUser]);\n\n  const onSubmit = () => {\n    if (user.id === 0) {\n      clearForm();\n      user.id = Math.floor(Math.random() * 1000);\n      onAddUser(user);\n    } else {\n      onUpdateUser(user.id, user);\n    }\n  };\n\n  const clearForm = () => {\n    setUser(initialUser);\n  };\n\n  return (\n    <Container>\n      <h2>Form User</h2>\n      <Form>\n        <Form.Control type=\"hidden\" value={user.id} readOnly={true} />\n        <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n          <Form.Label column sm={2}>\n            Email\n          </Form.Label>\n          <Col sm={10}>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Email\"\n              value={user.email}\n              onChange={e => setUser({ ...user, email: e.target.value })}\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId=\"formHorizontalUsername\">\n          <Form.Label column sm={2}>\n            Username\n          </Form.Label>\n          <Col sm={10}>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Username\"\n              value={user.username}\n              onChange={e => setUser({ ...user, username: e.target.value })}\n            />\n          </Col>\n        </Form.Group>\n\n        <Form.Group as={Row} controlId=\"formHorizontalPassword\">\n          <Form.Label column sm={2}>\n            Password\n          </Form.Label>\n          <Col sm={10}>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Password\"\n              value={user.pass}\n              onChange={e => setUser({ ...user, pass: e.target.value })}\n            />\n          </Col>\n        </Form.Group>\n\n        <Form.Group as={Row}>\n          <Col sm={{ span: 2, offset: 2 }}>\n            <Button onClick={onSubmit}>\n              {user.id === 0 ? `Add` : `Update`}\n            </Button>\n          </Col>\n\n          <Col>\n            <Button onClick={clearForm} variant=\"danger\">\n              Clear\n            </Button>\n          </Col>\n        </Form.Group>\n      </Form>\n    </Container>\n  );\n}\n\nexport default AddOrEdit;\n","import React from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nfunction Confirmation({ show, handleClose, onYes }) {\n  return (\n    <div>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Delete Data</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Are you sure?</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            No\n          </Button>\n          <Button variant=\"primary\" onClick={onYes}>\n            Yes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n}\n\nexport default Confirmation;\n","import React, { useState } from \"react\";\nimport { Container, Row, Table, ButtonToolbar, Button } from \"react-bootstrap\";\nimport Confirmation from \"./Confirmation\";\n\nfunction List({ users, onEditUser, onDeleteUser }) {\n  const [showModal, setShowModal] = useState(false);\n  const [wantToDeleteUserId, setWantToDeleteUserId] = useState(0);\n\n  const handleShowModal = (isShow, user) => {\n    //set deleted user\n    if (user != null) {\n      setWantToDeleteUserId(user.id);\n    }\n    setShowModal(isShow);\n  };\n\n  const onConfirmDelete = () => {\n    onDeleteUser(wantToDeleteUserId);\n    setShowModal(false);\n  };\n\n  return (\n    <Container>\n      <h2>List User</h2>\n      <Row>\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>ID</th>\n              <th>Email</th>\n              <th>Username</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((user, i) => (\n              <tr key={user.id}>\n                <td>{i + 1}</td>\n                <td>{user.id}</td>\n                <td>{user.email}</td>\n                <td>{user.username}</td>\n                <td>\n                  <ButtonToolbar>\n                    <Button\n                      variant=\"info\"\n                      size=\"sm\"\n                      onClick={() => onEditUser(user)}\n                    >\n                      Edit\n                    </Button>\n                    <Button\n                      variant=\"danger\"\n                      size=\"sm\"\n                      onClick={() => handleShowModal(true, user)}\n                    >\n                      Delete\n                    </Button>\n                  </ButtonToolbar>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </Row>\n      <Confirmation\n        show={showModal}\n        onYes={onConfirmDelete}\n        handleClose={() => handleShowModal(false, null)}\n      />\n    </Container>\n  );\n}\n\nexport default List;\n","import { useState } from \"react\";\n\nexport default function useCRUD(initialDatas, initialData) {\n  const [datas, setDatas] = useState(initialDatas);\n  const [data, setData] = useState(initialData);\n\n  const onAddData = data => {\n    setDatas([...datas, data]);\n  };\n\n  const onDeleteData = id => {\n    setDatas(datas.filter(data => data.id !== id));\n  };\n\n  const onEditData = user => {\n    setData(user);\n  };\n\n  const onUpdateData = (id, updatedData) => {\n    setDatas(datas.map(data => (data.id === id ? updatedData : data)));\n  };\n\n  return [\n    datas,\n    setDatas,\n    data,\n    setData,\n    onAddData,\n    onEditData,\n    onUpdateData,\n    onDeleteData\n  ];\n}\n","import React, { useState } from \"react\";\nimport { Row, Col, Container } from \"react-bootstrap\";\nimport AddOrEdit from \"./AddOrEdit\";\nimport List from \"./List\";\nimport useCRUD from \"../../hooks/useCRUD\";\n\nfunction User() {\n  const initialUsers = [\n    {\n      id: 99,\n      email: \"abdymalikmulky@gmail.com\",\n      username: \"abdymm\",\n      pass: 123456789\n    },\n    {\n      id: 88,\n      email: \"anniswaz@gmail.com\",\n      username: \"annisw\",\n      pass: 987654321\n    }\n  ];\n  const initialUser = {\n    id: 0,\n    email: \"\",\n    username: \"\",\n    pass: \"\"\n  };\n  const [\n    users,\n    setUsers,\n    user,\n    setUser,\n    onAddUser,\n    onEditUser,\n    onUpdateUser,\n    onDeleteUser\n  ] = useCRUD(initialUsers, initialUser);\n\n  return (\n    <Container>\n      <h1>USER</h1>\n      <Row>\n        <Col>\n          <AddOrEdit\n            initialUser={initialUser}\n            editedUser={user}\n            onAddUser={onAddUser}\n            onUpdateUser={onUpdateUser}\n          />\n        </Col>\n        <Col>\n          <List\n            users={users}\n            onEditUser={onEditUser}\n            onDeleteUser={onDeleteUser}\n          />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default User;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Col, Row, Button, Container } from \"react-bootstrap\";\n\nfunction AddOrEdit({ onAdd, onUpdate, editedUser, initialUser }) {\n  const [group, setGroup] = useState(editedUser);\n\n  useEffect(() => {\n    setGroup(editedUser);\n  }, [editedUser]);\n\n  const onSubmit = () => {\n    if (group.id === 0) {\n      clearForm();\n      group.id = Math.floor(Math.random() * 1000);\n      onAdd(group);\n    } else {\n      onUpdate(group.id, group);\n    }\n  };\n\n  const clearForm = () => {\n    setGroup(initialUser);\n  };\n\n  return (\n    <Container>\n      <h2>Form Group</h2>\n      <Form>\n        <Form.Control type=\"hidden\" value={group.id} readOnly={true} />\n        <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n          <Form.Label column sm={2}>\n            Name\n          </Form.Label>\n          <Col sm={10}>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Name\"\n              value={group.name}\n              onChange={e => setGroup({ ...group, name: e.target.value })}\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId=\"formHorizontalUsername\">\n          <Form.Label column sm={2}>\n          Description\n          </Form.Label>\n          <Col sm={10}>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Description\"\n              value={group.description}\n              onChange={e => setGroup({ ...group, description: e.target.value })}\n            />\n          </Col>\n        </Form.Group>\n\n     \n        <Form.Group as={Row}>\n          <Col sm={{ span: 2, offset: 2 }}>\n            <Button onClick={onSubmit}>\n              {group.id === 0 ? `Add` : `Update`}\n            </Button>\n          </Col>\n\n          <Col>\n            <Button onClick={clearForm} variant=\"danger\">\n              Clear\n            </Button>\n          </Col>\n        </Form.Group>\n      </Form>\n    </Container>\n  );\n}\n\nexport default AddOrEdit;\n","import React from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nfunction Confirmation({ show, handleClose, onYes }) {\n  return (\n    <div>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Delete Data</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Are you sure?</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            No\n          </Button>\n          <Button variant=\"primary\" onClick={onYes}>\n            Yes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n}\n\nexport default Confirmation;\n","import React, { useState } from \"react\";\nimport { Container, Row, Table, ButtonToolbar, Button } from \"react-bootstrap\";\nimport Confirmation from \"./Confirmation\";\n\nfunction List({ users, onEdit, onDelete }) {\n  const [showModal, setShowModal] = useState(false);\n  const [wantToDeleteUserId, setWantToDeleteUserId] = useState(0);\n\n  const handleShowModal = (isShow, user) => {\n    //set deleted user\n    if (user != null) {\n      setWantToDeleteUserId(user.id);\n    }\n    setShowModal(isShow);\n  };\n\n  const onConfirmDelete = () => {\n    onDelete(wantToDeleteUserId);\n    setShowModal(false);\n  };\n\n  return (\n    <Container>\n      <h2>List Group</h2>\n      <Row>\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>ID</th>\n              <th>Name</th>\n              <th>Desc</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((user, i) => (\n              <tr key={user.id}>\n                <td>{i + 1}</td>\n                <td>{user.id}</td>\n                <td>{user.name}</td>\n                <td>{user.description}</td>\n                <td>\n                  <ButtonToolbar>\n                    <Button\n                      variant=\"info\"\n                      size=\"sm\"\n                      onClick={() => onEdit(user)}\n                    >\n                      Edit\n                    </Button>\n                    <Button\n                      variant=\"danger\"\n                      size=\"sm\"\n                      onClick={() => handleShowModal(true, user)}\n                    >\n                      Delete\n                    </Button>\n                  </ButtonToolbar>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </Row>\n      <Confirmation\n        show={showModal}\n        onYes={onConfirmDelete}\n        handleClose={() => handleShowModal(false, null)}\n      />\n    </Container>\n  );\n}\n\nexport default List;\n","import React, { useState } from \"react\";\nimport { Row, Col, Container } from \"react-bootstrap\";\nimport AddOrEdit from \"./AddOrEdit\";\nimport List from \"./List\";\nimport useCRUD from \"../../hooks/useCRUD\";\n\nfunction Group() {\n  const initialUsers = [\n    {\n      id: 2,\n      name: \"ADMIN\",\n      description: \"ADMIN of the system\"\n    },\n    {\n      id: 1,\n      name: \"SUPERADMIN\",\n      description: \"Su things\"\n    }\n  ];\n  const initialUser = {\n    id: 0,\n    name: \"\",\n    description: \"\"\n  };\n  const [\n    users,\n    setUsers,\n    user,\n    setUser,\n    onAdd,\n    onEdit,\n    onUpdate,\n    onDelete\n  ] = useCRUD(initialUsers, initialUser);\n\n  return (\n    <Container>\n      <h1>GROUP</h1>\n      <Row>\n        <Col>\n          <AddOrEdit\n            initialUser={initialUser}\n            editedUser={user}\n            onAdd={onAdd}\n            onUpdate={onUpdate}\n          />\n        </Col>\n        <Col>\n          <List\n            users={users}\n            onEdit={onEdit}\n            onDelete={onDelete}\n          />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Group;\n","import React from \"react\";\nimport \"./App.css\";\nimport User from \"./components/User/index\";\nimport Group from \"./components/Group.js\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <User />\n      <hr />\n      <Group />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}